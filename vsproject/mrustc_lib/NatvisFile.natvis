<?xml version="1.0" encoding="utf-8"?> 
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <Type Name="RcString">
    <DisplayString Condition="m_ptr != 0">{(const char*)(m_ptr->data),s}</DisplayString>
    <DisplayString Condition="m_ptr == 0">""</DisplayString>
    <StringView Condition="m_ptr != 0">(const char*)m_ptr->data,s</StringView>
  </Type>
  <Type Name="Span">
    <DisplayString Condition="m_ptr == 0">NULL</DisplayString>
    <DisplayString Condition="m_ptr == &amp;Span::s_empty_span">EMPTY</DisplayString>
    <DisplayString Condition="m_ptr">{m_ptr->filename,s}:{m_ptr->start_line},{m_ptr->start_ofs}-{m_ptr->end_line},{m_ptr->end_ofs} from {m_ptr->parent_span}</DisplayString> <!-- -->
  </Type>
  <Type Name="AST::AttributeName">
    <DisplayString Condition="elems._Mypair._Myval2._Myfirst + 0 == elems._Mypair._Myval2._Mylast">::</DisplayString>
    <DisplayString Condition="elems._Mypair._Myval2._Myfirst + 1 == elems._Mypair._Myval2._Mylast">::{elems,expand(2)}</DisplayString>
  </Type>
  <Type Name="HIR::SimplePath">
    <DisplayString Condition="m_components._Mypair._Myval2._Myfirst + 0 == m_components._Mypair._Myval2._Mylast">::{m_crate_name}::</DisplayString>
    <DisplayString Condition="m_components._Mypair._Myval2._Myfirst + 1 == m_components._Mypair._Myval2._Mylast">::{m_crate_name}::{m_components,expand(2)}</DisplayString>
    <DisplayString Condition="m_components._Mypair._Myval2._Myfirst + 2 == m_components._Mypair._Myval2._Mylast">::{m_crate_name}::{m_components,expand(2)}::{m_components,expand(3)}</DisplayString>
    <DisplayString Condition="m_components._Mypair._Myval2._Myfirst + 3 == m_components._Mypair._Myval2._Mylast">::{m_crate_name}::{m_components,expand(2)}::{m_components,expand(3)}::{m_components,expand(4)}</DisplayString>
    <DisplayString Condition="m_components._Mypair._Myval2._Myfirst + 4 == m_components._Mypair._Myval2._Mylast">::{m_crate_name}::{m_components,expand(2)}::{m_components,expand(3)}::{m_components,expand(4)}::{m_components,expand(5)}</DisplayString>
    <DisplayString Condition="m_components._Mypair._Myval2._Myfirst + 5 == m_components._Mypair._Myval2._Mylast">::{m_crate_name}::{m_components,expand(2)}::{m_components,expand(3)}::{m_components,expand(4)}::{m_components,expand(5)}::{m_components,expand(6)}</DisplayString>
  </Type>
  <Type Name="HIR::TypeRef">
    <DisplayString Condition="m_ptr != 0">{m_ptr->m_data}</DisplayString>
    <DisplayString Condition="m_ptr == 0">NULL</DisplayString>
    <Expand>
      <Item Name="m_ptr->m_refcount" Condition="m_ptr != 0">m_ptr->m_refcount</Item>
      <Item Name="m_ptr->m_data" Condition="m_ptr != 0">m_ptr->m_data</Item>
    </Expand>
  </Type>
  <Type Name="HIR::TypeData">
    <DisplayString Condition="m_tag == TAG_Infer">Infer #{m_data.Infer.index,i} {m_data.Infer.ty_class}</DisplayString>
    <DisplayString Condition="m_tag == TAG_Primitive">Primitive {m_data.Primitive}</DisplayString>
    <DisplayString Condition="m_tag == TAG_Generic">Generic {m_data.Generic.name} #{m_data.Generic.binding}</DisplayString>
    <DisplayString Condition="m_tag == TAG_Borrow">Borrow {m_data.Borrow}</DisplayString>
    <DisplayString Condition="m_tag == TAG_Path">Path {m_data.Path}</DisplayString>
    <DisplayString Condition="m_tag == TAG_Tuple">Tuple {m_data.Tuple}</DisplayString>
    <DisplayString Condition="m_tag == TAG_ErasedType">ErasedType {m_data.ErasedType}</DisplayString>
    <DisplayString Condition="m_tag == TAG_TraitObject">TraitObject {m_data.TraitObject}</DisplayString>
    <Expand>
      <Item Name="Infer"   Condition="m_tag == TAG_Infer" >m_data.Infer</Item>
      <Item Name="Generic" Condition="m_tag == TAG_Generic">m_data.Generic</Item>
      <Item Name="Borrow"  Condition="m_tag == TAG_Borrow">m_data.Borrow</Item>
      <Item Name="Path"    Condition="m_tag == TAG_Path" >m_data.Path</Item>
      <Item Name="Tuple"   Condition="m_tag == TAG_Tuple">m_data.Tuple</Item>
      <Item Name="ErasedType" Condition="m_tag == TAG_ErasedType">m_data.ErasedType</Item>
      <Item Name="TraitObject" Condition="m_tag == TAG_TraitObject">m_data.TraitObject</Item>
    </Expand>
  </Type>
  <Type Name="HIR::Path">
    <DisplayString>{m_data}</DisplayString>
  </Type>
  <Type Name="HIR::Path::Data">
    <DisplayString Condition="m_tag == TAG_Generic">Generic {m_data.Generic}</DisplayString>
    <DisplayString Condition="m_tag == TAG_UfcsKnown">UfcsKnown {m_data.UfcsKnown}</DisplayString>
    <Expand>
      <Item Name="Generic" Condition="m_tag == TAG_Generic">m_data.Generic</Item>
      <Item Name="UfcsKnown" Condition="m_tag == TAG_UfcsKnown">m_data.UfcsKnown</Item>
    </Expand>
  </Type>
  <Type Name="HIR::TypePathBinding">
    <DisplayString Condition="m_tag == TAG_Unbound">Unbound</DisplayString>
    <DisplayString Condition="m_tag == TAG_Struct">Struct {m_data.Struct,p}</DisplayString>
    <Expand>
      <Item Name="Unbound" Condition="m_tag == TAG_Unbound">m_data.Unbound</Item>
      <Item Name="Struct" Condition="m_tag == TAG_Struct">m_data.Struct</Item>
    </Expand>
  </Type>
  <Type Name="HIR::GenericBound">
    <DisplayString Condition="m_tag == TAG_TraitBound">TraitBound {m_data.TraitBound.type}: {m_data.TraitBound.trait}</DisplayString>
    <DisplayString Condition="m_tag == TAG_TypeLifetime">TypeLifetime {m_data.TypeLifetime.type}: {m_data.TypeLifetime.valid_for}</DisplayString>
    <Expand>
      <Item Name="TypeLifetime" Condition="m_tag == TAG_TypeLifetime">m_data.TypeLifetime</Item>
      <Item Name="TraitBound" Condition="m_tag == TAG_TraitBound">m_data.TraitBound</Item>
    </Expand>
  </Type>

  <Type Name="AST::Path::Class">
    <DisplayString Condition="m_tag == TAG_Absolute">Absolute {m_data.Absolute}</DisplayString>
    <Expand>
      <Item Name="Relative" Condition="m_tag == TAG_Relative">m_data.Relative</Item>
      <Item Name="Absolute" Condition="m_tag == TAG_Absolute">m_data.Absolute</Item>
    </Expand>
  </Type>
  <Type Name="AST::Item">
    <DisplayString Condition="m_tag == TAG_None">None</DisplayString>
    <DisplayString Condition="m_tag == TAG_Macro">Macro {m_data.Macro}</DisplayString>
    <DisplayString Condition="m_tag == TAG_Module">Module {m_data.Module}</DisplayString>
    <Expand>
      <Item Name="Macro"   Condition="m_tag == TAG_Macro" >m_data.Macro</Item>
      <Item Name="Module"  Condition="m_tag == TAG_Module">m_data.Module</Item>
    </Expand>
  </Type>
  <Type Name="HIR::MacroItem">
    <DisplayString Condition="m_tag == TAG_MacroRules">MacroRules {m_data.MacroRules}</DisplayString>
    <DisplayString Condition="m_tag == TAG_Import">Import {m_data.Import}</DisplayString>
    <Expand>
      <Item Name="Import"     Condition="m_tag == TAG_Import"     >m_data.Import</Item>
      <Item Name="MacroRules" Condition="m_tag == TAG_MacroRules" >m_data.MacroRules</Item>
    </Expand>
  </Type>
</AutoVisualizer>